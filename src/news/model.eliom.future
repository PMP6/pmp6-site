type 'a t = {
  title : string;
  user : 'a;
}

class ['a] std = object
  val id = (assert false : 'a)

  method id = id
 end

class ['a] item title user = object (_ : 'a)
  val title = title
  val user = user
  val pub_time = Time.now ()

  method title = title
  method user = user
  method pub_time = pub_time

  method test u = {< user = u >}
end

type id

class ['a] model title user = object (_ : 'a)
  inherit [id] std
  inherit [_] item title user
end

let foo = new model "lol" 1

let bar = new model "lol" ()

type 'a t = 'a item as 'a

let f : 'a -> < x : 'b. 'b -> 'b > = assert false

let x = f ()

class ['a] ulol = object method y = new ulol end

let ff = new ulol
